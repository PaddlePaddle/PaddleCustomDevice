/* Copyright (c) 2023 PaddlePaddle Authors. All Rights Reserved.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License. */

#pragma once
// common help func
#include "backend/equivalence_trans/utils.h"
// INSENSITIVE OPS
#include "backend/equivalence_trans/insensitive_ops/accuracy.h"
#include "backend/equivalence_trans/insensitive_ops/activation.h"
#include "backend/equivalence_trans/insensitive_ops/adam.h"
#include "backend/equivalence_trans/insensitive_ops/adamw.h"
#include "backend/equivalence_trans/insensitive_ops/add_n.h"
#include "backend/equivalence_trans/insensitive_ops/argmax.h"
#include "backend/equivalence_trans/insensitive_ops/argmin.h"
#include "backend/equivalence_trans/insensitive_ops/argsort.h"
#include "backend/equivalence_trans/insensitive_ops/assign.h"
#include "backend/equivalence_trans/insensitive_ops/assign_value.h"
#include "backend/equivalence_trans/insensitive_ops/atan.h"
#include "backend/equivalence_trans/insensitive_ops/batch_norm.h"
#include "backend/equivalence_trans/insensitive_ops/bilinear_interp_v2.h"
#include "backend/equivalence_trans/insensitive_ops/bitwise_not.h"
#include "backend/equivalence_trans/insensitive_ops/bmm.h"
#include "backend/equivalence_trans/insensitive_ops/cast.h"
#include "backend/equivalence_trans/insensitive_ops/check_finite_and_unscale.h"
#include "backend/equivalence_trans/insensitive_ops/clip.h"
#include "backend/equivalence_trans/insensitive_ops/concat.h"
#include "backend/equivalence_trans/insensitive_ops/conv2d.h"
#include "backend/equivalence_trans/insensitive_ops/conv3d.h"
#include "backend/equivalence_trans/insensitive_ops/cos.h"
#include "backend/equivalence_trans/insensitive_ops/cross_entropy.h"
#include "backend/equivalence_trans/insensitive_ops/cumsum.h"
#include "backend/equivalence_trans/insensitive_ops/dropout.h"
#include "backend/equivalence_trans/insensitive_ops/elementwise_binary.h"
#include "backend/equivalence_trans/insensitive_ops/elementwise_unary.h"
#include "backend/equivalence_trans/insensitive_ops/embedding.h"
#include "backend/equivalence_trans/insensitive_ops/equal.h"
#include "backend/equivalence_trans/insensitive_ops/expand.h"
#include "backend/equivalence_trans/insensitive_ops/expand_as.h"
#include "backend/equivalence_trans/insensitive_ops/fill_constant.h"
#include "backend/equivalence_trans/insensitive_ops/fill_zeros_like.h"
#include "backend/equivalence_trans/insensitive_ops/flatten.h"
#include "backend/equivalence_trans/insensitive_ops/flip.h"
#include "backend/equivalence_trans/insensitive_ops/floor.h"
#include "backend/equivalence_trans/insensitive_ops/full_like.h"
#include "backend/equivalence_trans/insensitive_ops/fuse/conv_add_mul_add_hard_swish_mul_add.h"
#include "backend/equivalence_trans/insensitive_ops/fuse/conv_bias_activate.h"
#include "backend/equivalence_trans/insensitive_ops/fuse/conv_bn.h"
#include "backend/equivalence_trans/insensitive_ops/fuse/conv_bn_hard_swish.h"
#include "backend/equivalence_trans/insensitive_ops/fuse/conv_bn_relu.h"
#include "backend/equivalence_trans/insensitive_ops/fuse/dot_bias.h"
#include "backend/equivalence_trans/insensitive_ops/fuse/mul_add.h"
#include "backend/equivalence_trans/insensitive_ops/gather.h"
#include "backend/equivalence_trans/insensitive_ops/gather_nd.h"
#include "backend/equivalence_trans/insensitive_ops/gelu.h"
#include "backend/equivalence_trans/insensitive_ops/grid_sampler.h"
#include "backend/equivalence_trans/insensitive_ops/huber_loss.h"
#include "backend/equivalence_trans/insensitive_ops/increment.h"
#include "backend/equivalence_trans/insensitive_ops/index_select.h"
#include "backend/equivalence_trans/insensitive_ops/instance_norm.h"
#include "backend/equivalence_trans/insensitive_ops/iou_similarity.h"
#include "backend/equivalence_trans/insensitive_ops/isinf_v2.h"
#include "backend/equivalence_trans/insensitive_ops/label_smooth.h"
#include "backend/equivalence_trans/insensitive_ops/layer_norm.h"
#include "backend/equivalence_trans/insensitive_ops/log.h"
#include "backend/equivalence_trans/insensitive_ops/log_loss.h"
#include "backend/equivalence_trans/insensitive_ops/log_softmax.h"
#include "backend/equivalence_trans/insensitive_ops/logical_and.h"
#include "backend/equivalence_trans/insensitive_ops/logical_not.h"
#include "backend/equivalence_trans/insensitive_ops/masked_select.h"
#include "backend/equivalence_trans/insensitive_ops/matmul_v2.h"
#include "backend/equivalence_trans/insensitive_ops/maximum.h"
#include "backend/equivalence_trans/insensitive_ops/mean.h"
#include "backend/equivalence_trans/insensitive_ops/meshgrid.h"
#include "backend/equivalence_trans/insensitive_ops/minimum.h"
#include "backend/equivalence_trans/insensitive_ops/momentum.h"
#include "backend/equivalence_trans/insensitive_ops/mul.h"
#include "backend/equivalence_trans/insensitive_ops/nearest_interp.h"
#include "backend/equivalence_trans/insensitive_ops/nearest_interp_v2.h"
#include "backend/equivalence_trans/insensitive_ops/not_equal.h"
#include "backend/equivalence_trans/insensitive_ops/one_hot.h"
#include "backend/equivalence_trans/insensitive_ops/pool2d.h"
#include "backend/equivalence_trans/insensitive_ops/prior_box.h"
#include "backend/equivalence_trans/insensitive_ops/range.h"
#include "backend/equivalence_trans/insensitive_ops/reduce_x.h"
#include "backend/equivalence_trans/insensitive_ops/reshape.h"
#include "backend/equivalence_trans/insensitive_ops/reverse.h"
#include "backend/equivalence_trans/insensitive_ops/rmsprop.h"
#include "backend/equivalence_trans/insensitive_ops/rnn.h"
#include "backend/equivalence_trans/insensitive_ops/roi_align.h"
#include "backend/equivalence_trans/insensitive_ops/roll.h"
#include "backend/equivalence_trans/insensitive_ops/scale.h"
#include "backend/equivalence_trans/insensitive_ops/scatter.h"
#include "backend/equivalence_trans/insensitive_ops/set_value.h"
#include "backend/equivalence_trans/insensitive_ops/shape.h"
#include "backend/equivalence_trans/insensitive_ops/share_data.h"
#include "backend/equivalence_trans/insensitive_ops/sigmoid_cross_entropy_with_logits.h"
#include "backend/equivalence_trans/insensitive_ops/sign.h"
#include "backend/equivalence_trans/insensitive_ops/size.h"
#include "backend/equivalence_trans/insensitive_ops/slice.h"
#include "backend/equivalence_trans/insensitive_ops/softmax.h"
#include "backend/equivalence_trans/insensitive_ops/softmax_with_cross_entropy.h"
#include "backend/equivalence_trans/insensitive_ops/split.h"
#include "backend/equivalence_trans/insensitive_ops/sqrt.h"
#include "backend/equivalence_trans/insensitive_ops/squared_l2_norm.h"
#include "backend/equivalence_trans/insensitive_ops/squeeze.h"
#include "backend/equivalence_trans/insensitive_ops/stack.h"
#include "backend/equivalence_trans/insensitive_ops/strided_slice.h"
#include "backend/equivalence_trans/insensitive_ops/tanh.h"
#include "backend/equivalence_trans/insensitive_ops/tile.h"
#include "backend/equivalence_trans/insensitive_ops/topk.h"
#include "backend/equivalence_trans/insensitive_ops/transpose.h"
#include "backend/equivalence_trans/insensitive_ops/tril_triu.h"
#include "backend/equivalence_trans/insensitive_ops/unsqueeze.h"
#include "backend/equivalence_trans/insensitive_ops/unstack.h"
#include "backend/equivalence_trans/insensitive_ops/where.h"
#include "backend/equivalence_trans/insensitive_ops/yolo_box.h"
