import os
from setuptools import setup, Distribution


packages = []
package_data = {}


def write_version_py(filename='python/paddle_custom_device/gcu/__init__.py'):
    cnt = '''# THIS FILE IS GENERATED FROM PADDLEPADDLE SETUP.PY
#
full_version  = '@OUTPUT_PADDLE_PACKAGE_VERSION@'
sdk_version  = '@TOPS_VERSION@'
git_commit_id = '@GIT_HASH@'

__all__ = ['version']

def version():
    """Get the version info of paddle custom gcu

    Returns:
        version: version of paddle custom gcu
        commit: the commit id of paddle custom gcu
        plugin: the plugin version of paddle custom gcu

    Examples:
        .. code-block:: python

            import paddle_custom_device

            paddle_custom_device.gcu.version()
            # version: 0.0.0.9e03b0a
            # commit: 9e03b0a42a530d07fb60e141ee618fc02595bd96
            # tops-sdk: 2.5.20231128
    """
    print('version:', full_version)
    print('commit:', git_commit_id)
    print('tops-sdk:', sdk_version)
'''
    dirname = os.path.dirname(filename)
    if not os.path.exists(dirname):
        os.makedirs(dirname)

    with open(filename, 'w') as f:
        f.write(cnt)


def write_init_py(filename='python/paddle_custom_device/__init__.py'):
    cnt = '''# THIS FILE IS GENERATED FROM PADDLEPADDLE SETUP.PY
#
from . import gcu # noqa: F401

__all__ = [  # noqa
    'gcu',
]

'''
    with open(filename, 'w') as f:
        f.write(cnt)


class BinaryDistribution(Distribution):
    def has_ext_modules(self):
        return True


def main():
    write_version_py()
    write_init_py()

    setup(
        name = '@CMAKE_PROJECT_NAME@',
        version='@OUTPUT_PADDLE_PACKAGE_VERSION@',
        description='PaddlePaddle Custom Device GCU Plugin',
        long_description='',
        long_description_content_type="text/markdown",
        author_email="Paddle-better@baidu.com",
        maintainer="PaddlePaddle",
        maintainer_email="Paddle-better@baidu.com",
        project_urls={},
        license='Apache Software License',
        packages= [
            'paddle_custom_device',
            'paddle_custom_device.gcu'
        ],
        include_package_data=True,
        package_data = {
            '': ['*.so', '*.h', '*.py', '*.hpp'],
        },
        package_dir = {
            '': 'python',
        },
        zip_safe=False,
        distclass=BinaryDistribution,
        entry_points={
            'console_scripts': [
            ]
        },
        classifiers=[
        ],
        keywords='PaddlePaddle Custom Device GCU Plugin',
    )


if __name__ == '__main__':
    main()
