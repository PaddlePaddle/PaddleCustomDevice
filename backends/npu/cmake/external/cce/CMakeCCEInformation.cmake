# set up rule variables for LANG

include(CMakeCommonLanguageInclude)

set(CMAKE_INCLUDE_FLAG_CCE "-I")

if(UNIX)
  set(CMAKE_CCE_OUTPUT_EXTENSION .o)
else()
  set(CMAKE_CCE_OUTPUT_EXTENSION .obj)
endif()

set(_INCLUDED_FILE 0)
list(APPEND CMAKE_CCE_FLAGS
     "-O3 -std=c++17 -xcce ${_CMAKE_CCE_FLAGS} -fPIC -D__ASCEND_C__")
# --cce-build-static-lib
list(APPEND CMAKE_SHARED_LIBRARY_CCE_FLAGS -fPIC)
list(APPEND CMAKE_SHARED_LIBRARY_CREATE_CCE_FLAGS -shared)
list(APPEND CMAKE_CCE_LINK_FLAGS "--cce-fatobj-link")

list(APPEND CMAKE_CCE_IMPLICIT_LINK_DIRECTORIES
     $ENV{ASCEND_HOME_PATH}/runtime/lib64)
list(APPEND CMAKE_CCE_IMPLICIT_LINK_LIBRARIES runtime ascendcl)

# compile a CCE file into an object file
if(NOT CMAKE_CCE_COMPILE_OBJECT)
  set(CMAKE_CCE_COMPILE_OBJECT
      "<CMAKE_CCE_COMPILER> <DEFINES> <INCLUDES> <FLAGS> -o <OBJECT> -c <SOURCE>"
  )
endif()

# create a shared CCE library
if(NOT CMAKE_CCE_CREATE_SHARED_LIBRARY)
  set(CMAKE_CCE_CREATE_SHARED_LIBRARY
      "<CMAKE_CCE_COMPILER> <CMAKE_SHARED_LIBRARY_CCE_FLAGS> ${CMAKE_CCE_LINK_FLAGS} <LINK_FLAGS> <CMAKE_SHARED_LIBRARY_CREATE_CCE_FLAGS> <SONAME_FLAG><TARGET_SONAME> -pthread -o <TARGET> <OBJECTS> <LINK_LIBRARIES>"
  )
endif()

# create a CCE shared module copy the shared library rule by default
if(NOT CMAKE_CCE_CREATE_SHARED_MODULE)
  set(CMAKE_CCE_CREATE_SHARED_MODULE ${CMAKE_CCE_CREATE_SHARED_LIBRARY})
endif()

# Create a static archive incrementally for large object file counts. If
# CMAKE_CCE_CREATE_STATIC_LIBRARY is set it will override these.
if(NOT DEFINED CMAKE_CCE_CREATE_STATIC_LIBRARY)
  set(CMAKE_CCE_CREATE_STATIC_LIBRARY
      "<CMAKE_AR> qc <TARGET> <LINK_FLAGS> <OBJECTS>")
endif()
if(NOT DEFINED CMAKE_CCE_ARCHIVE_APPEND)
  set(CMAKE_CCE_ARCHIVE_APPEND "<CMAKE_AR> q <TARGET> <LINK_FLAGS> <OBJECTS>")
endif()
if(NOT DEFINED CMAKE_CCE_ARCHIVE_FINISH)
  set(CMAKE_CCE_ARCHIVE_FINISH "<CMAKE_RANLIB> <TARGET>")
endif()

if(NOT CMAKE_CCE_LINK_EXECUTABLE)
  set(CMAKE_CCE_LINK_EXECUTABLE
      "<CMAKE_CCE_COMPILER> <FLAGS> <CMAKE_CCE_LINK_FLAGS> <LINK_FLAGS> <OBJECTS> -o <TARGET> <LINK_LIBRARIES>"
  )
endif()

set(CMAKE_CCE_INFORMATION_LOADED 1)
