import os
from setuptools import setup, Distribution, Extension

packages = []
package_data = {}


def write_version_py(filename='python/paddle_custom_device/npu/__init__.py'):
    cnt = '''# THIS FILE IS GENERATED FROM PADDLEPADDLE SETUP.PY
#
full_version  = '@PADDLE_VERSION@'
cann_version  = '@ASCEND_TOOLKIT_VERSION@'
git_commit_id = '@GIT_HASH@'

import test_dyh


__all__ = ['version']

def npu_init():
    print("set complie config")
    cfg_file = "/workspace/compile.cfg"
    set_compile_config(cfg_file)

def version():
    """Get the version info of paddle custom npu

    Returns:
        version: version of paddle custom npu
        commit: the commit id of paddle custom npu
        cann: the cann version of paddle custom npu

    Examples:
        .. code-block:: python

            import paddle_custom_device

            paddle_custom_device.npu.version()
            # version: 2.5.0
            # commit: b1539a921dbabf708807ebedb2671fa7bd3fd2f9
            # cann: 6.0.1
    """
    print('version:', full_version)
    print('commit:', git_commit_id)
    print('cann:', cann_version)
'''
    dirname = os.path.dirname(filename)
    if not os.path.exists(dirname):
        os.makedirs(dirname)

    with open(filename, 'w') as f:
        f.write(cnt)


def write_init_py(filename='python/paddle_custom_device/__init__.py'):
    cnt = '''# THIS FILE IS GENERATED FROM PADDLEPADDLE SETUP.PY
#
from . import npu # noqa: F401

__all__ = [  # noqa
    'npu',
]

'''
    with open(filename, 'w') as f:
        f.write(cnt)


class BinaryDistribution(Distribution):
    def has_ext_modules(self):
        return True


def main():
    write_version_py()
    write_init_py()

    setup(
        name = '@CMAKE_PROJECT_NAME@',
        version='@PADDLE_VERSION@',
        description='PaddlePaddle Custom Device NPU Plugin',
        long_description='',
        long_description_content_type="text/markdown",
        author_email="Paddle-better@baidu.com",
        maintainer="PaddlePaddle",
        maintainer_email="Paddle-better@baidu.com",
        project_urls={},
        license='Apache Software License',
        packages= [
            'paddle_custom_device',
            'paddle_custom_device.npu'
        ],
        include_package_data=True,
        package_data = {
            '': ['*.so', '*.h', '*.py', '*.hpp'],
        },
        package_dir = {
            '': 'python',
        },
        ext_modules=[Extension(name='test_dyh',sources=['../pybind.cc'], include_dirs=['third_party/pybind/src/extern_pybind/include', '/usr/local/Ascend/ascend-toolkit/latest/acllib/include', '/usr/local/Ascend/ascend-toolkit/latest/fwkacllib/include','/usr/local/Ascend/ascend-toolkit/latest/compiler/include/acl'], library_libs=['/usr/local/Ascend/ascend-toolkit/latest/fwkacllib/lib64/libascendcl.so', '/usr/local/Ascend/ascend-toolkit/latest/fwkacllib/lib64/libacl_op_compiler.so', '/usr/local/Ascend/ascend-toolkit/latest/fwkacllib/lib64/libhccl.so'])],
        zip_safe=False,
        distclass=BinaryDistribution,
        entry_points={
            'console_scripts': [
            ]
        },
        classifiers=[
        ],
        keywords='PaddlePaddle Custom Device NPU Plugin',
    )


if __name__ == '__main__':
    main()
